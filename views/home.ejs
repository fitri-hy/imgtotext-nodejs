<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Konversi Gambar Ke Teks | Powered by I-As.dev</title>
	
    <meta name="description" content="Temukan cara cepat dan efisien untuk mengonversi gambar ke teks dengan alat konversi gambar ke teks kami. Salin dan gunakan teks dari gambar tanpa kesulitan.">
	<meta name="keywords" content="konversi gambar ke teks, menyalin teks dari gambar, OCR, alat konversi gambar, ekstraksi teks dari gambar, teknologi OCR, mengubah gambar menjadi teks, alat OCR, konversi foto ke teks, identifikasi teks gambar">
    <meta name="author" content="I-As.dev">
    <meta property="og:title" content="Konversi Gambar ke Teks: Solusi Mudah untuk Menyalin Teks dari Gambar">
    <meta property="og:description" content="Temukan cara cepat dan efisien untuk mengonversi gambar ke teks dengan alat konversi gambar ke teks kami. Salin dan gunakan teks dari gambar tanpa kesulitan.">
    <meta property="og:image" content="https://imgtotext-.i-as.dev/images/og.jpg">
    <meta property="og:url" content="https://imgtotext-.i-as.dev">
	
    <link rel="icon" href="/images/logo.png" type="image/x-icon">
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
	<img class="h-screen w-full object-cover fixed top-0 -z-10" src="/images/bg.jpg">
    <div class="min-h-screen w-full flex justify-center items-center p-4 backdrop-blur-sm">
		<div class="w-full max-w-xl bg-gray-800/80 p-6 rounded-lg shadow">
			<div class="flex justify-between items-center gap-1 mb-4">
				<button id="openModalBtn" class="text-white hover:text-blue-100 bg-gray-900 p-2 p-2 rounded-lg">
					<svg class="w-4 h-4" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z"/></svg>
				</button>
				<div class="flex items-center gap-1">
					<a href="https://i-as.dev/" target="_blank" class="text-white hover:text-blue-100 bg-gray-900 p-2 p-2 rounded-lg">
						<svg class="w-4 h-4" fill="currentColor"  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M352 256c0 22.2-1.2 43.6-3.3 64H163.3c-2.2-20.4-3.3-41.8-3.3-64s1.2-43.6 3.3-64H348.7c2.2 20.4 3.3 41.8 3.3 64zm28.8-64H503.9c5.3 20.5 8.1 41.9 8.1 64s-2.8 43.5-8.1 64H380.8c2.1-20.6 3.2-42 3.2-64s-1.1-43.4-3.2-64zm112.6-32H376.7c-10-63.9-29.8-117.4-55.3-151.6c78.3 20.7 142 77.5 171.9 151.6zm-149.1 0H167.7c6.1-36.4 15.5-68.6 27-94.7c10.5-23.6 22.2-40.7 33.5-51.5C239.4 3.2 248.7 0 256 0s16.6 3.2 27.8 13.8c11.3 10.8 23 27.9 33.5 51.5c11.6 26 20.9 58.2 27 94.7zm-209 0H18.6C48.6 85.9 112.2 29.1 190.6 8.4C165.1 42.6 145.3 96.1 135.3 160zM8.1 192H131.2c-2.1 20.6-3.2 42-3.2 64s1.1 43.4 3.2 64H8.1C2.8 299.5 0 278.1 0 256s2.8-43.5 8.1-64zM194.7 446.6c-11.6-26-20.9-58.2-27-94.6H344.3c-6.1 36.4-15.5 68.6-27 94.6c-10.5 23.6-22.2 40.7-33.5 51.5C272.6 508.8 263.3 512 256 512s-16.6-3.2-27.8-13.8c-11.3-10.8-23-27.9-33.5-51.5zM135.3 352c10 63.9 29.8 117.4 55.3 151.6C112.2 482.9 48.6 426.1 18.6 352H135.3zm358.1 0c-30 74.1-93.6 130.9-171.9 151.6c25.5-34.2 45.2-87.7 55.3-151.6H493.4z"/></svg>
					</a>
					<a href="https://github.com/fitri-hy" target="_blank" class="text-white hover:text-blue-100 bg-gray-900 p-2 p-2 rounded-lg">
						<svg class="w-4 h-4" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3 .3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5 .3-6.2 2.3zm44.2-1.7c-2.9 .7-4.9 2.6-4.6 4.9 .3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3 .7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3 .3 2.9 2.3 3.9 1.6 1 3.6 .7 4.3-.7 .7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3 .7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3 .7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"/></svg>
					</a>
				</div>
			</div>
			<img src="/images/logo.png" class="h-24 w-24 m-auto">
			<h1 class="text-center font-extrabold text-3xl text-white mt-2">Images To Text</h1>
			<form id="uploadForm" action="/upload" method="post" enctype="multipart/form-data">
				<div class="flex flex-col mt-9">
					<input class="file:bg-gray-800 file:hover:bg-gray-700 file:text-white file:border-none file:px-2 file:py-1 file:rounded p-2 bg-gray-100 rounded-lg border border-gray-700 bg-gray-900 text-gray-200" type="file" name="image" accept="image/*" required>
					<div class="flex justify-center">
						<button class="mt-4 bg-violet-800 px-4 py-2 rounded text-white p-2 hover:bg-violet-900 p-2 rounded-lg" type="submit">Upload & Generate</button>
					</div>
					<h2 class="text-gray-800 font-bold mt-6">Result</h2>
					<div id="result" class="p-4 bg-gray-900 rounded text-gray-200">Data not available.</div>
				</div>
			</form>
		</div>
	</div>
	<div id="myModal" class="hidden z-50 fixed inset-0 min-h-screen w-full p-4">
		<div class="bg-white rounded-lg shadow p-4 h-full w-full overflow-auto max-w-xl m-auto">
			<div class="flex justify-between items-center">
				<h2 class="text-2xl font-semibold mb-4">Dokumentasi</h2>
				<span id="closeModalBtn" class="-mt-4 text-rose-500 hover:text-rose-600 text-4xl cursor-pointer">&times;</span>
			</div>
			<div class="text-gray-800 mt-6">
				<h2 class="font-bold">Curl</h2>
				<pre class="bg-gray-100 border rounded-lg p-2 overflow-x-auto mt-2"><code>curl -X POST https://imgtotext-.i-as.dev/generate/upload \
   -F &quot;image=@/path/to/your/image.jpg&quot;</pre></code>
				
				<h2 class="font-bold mt-4">API Url</h2>
				<pre class="bg-gray-100 border rounded-lg p-2 overflow-x-auto mt-2"><code>https://imgtotext-.i-as.dev/api/generate/upload</pre></code>
			
				<h2 class="font-bold mt-4">Contoh Penggunaan</h2>
				<pre class="bg-gray-100 border rounded-lg p-2 overflow-x-auto mt-2"><code>// HTML

&lt;body&gt;
    &lt;h1&gt;Upload Gambar&lt;/h1&gt;
    &lt;form id=&quot;uploadForm&quot;&gt;
        &lt;input type=&quot;file&quot; id=&quot;imageInput&quot; name=&quot;image&quot; accept=&quot;image/*&quot;&gt;
        &lt;button type=&quot;submit&quot;&gt;Unggah&lt;/button&gt;
    &lt;/form&gt;
    &lt;script&gt;
		document.getElementById('uploadForm').addEventListener('submit', async function(event) {
			event.preventDefault();

			const formData = new FormData();
			const fileInput = document.getElementById('imageInput');
			formData.append('image', fileInput.files[0]);

			try {
				const response = await fetch('https://imgtotext-.i-as.dev/api/generate/upload', {
					method: 'POST',
					body: formData
				});

				if (!response.ok) {
					throw new Error('Network response was not ok');
				}

				const result = await response.json();
				console.log('Success:', result);
			} catch (error) {
				console.error('Error:', error);
			}
		});
	&lt;/script&gt;
&lt;/body&gt;</pre></code>
				<pre class="mt-4 bg-gray-100 border rounded-lg p-2 overflow-x-auto"><code>// PHP

const url = 'https://imgtotext-.i-as.dev/generate/upload';
const fileInput = document.querySelector('input[type="file"]');
const file = fileInput.files[0];
const formData = new FormData();

formData.append('image', file);

fetch(url, {
    method: 'POST',
    body: formData
})
.then(response => response.json())
.then(data => {
    console.log(data);
})
.catch(error => {
    console.error('Error:', error);
});</pre></code>
				<pre class="mt-4 bg-gray-100 border rounded-lg p-2 overflow-x-auto mt-2"><code>// Python

from flask import Flask, request, jsonify
import os

app = Flask(__name__)
UPLOAD_FOLDER = 'uploads/'
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

@app.route('https://imgtotext-.i-as.dev/api/generate/upload', methods=['POST'])
def upload_file():
    if 'image' not in request.files:
        return jsonify({'status': 'error', 'message': 'No file part'}), 400

    file = request.files['image']
    if file.filename == '':
        return jsonify({'status': 'error', 'message': 'No selected file'}), 400

    file_path = os.path.join(UPLOAD_FOLDER, file.filename)
    file.save(file_path)
    return jsonify({'status': 'success', 'file': file_path})

if __name__ == '__main__':
    app.run(port=3000)</pre></code>
				<pre class="mt-4 bg-gray-100 border rounded-lg p-2 overflow-x-auto mt-2"><code>// C++

#include "crow_all.h"
#include <fstream>
#include <iostream>

#define UPLOAD_FOLDER "uploads/"

void save_file(const crow::request& req, const std::string& filename) {
    std::ofstream file(UPLOAD_FOLDER + filename, std::ios::binary);
    file.write(req.body.data(), req.body.size());
}

int main() {
    crow::SimpleApp app;
    crow::response res;

    CROW_ROUTE(app, "https://imgtotext-.i-as.dev/api/generate/upload")
    .methods(crow::HTTPMethod::POST)
    ([&](const crow::request& req) {
        if (req.has_file("image")) {
            auto file = req.get_file("image");
            save_file(req, file.filename);
            return crow::response{200, "{\"status\":\"success\",\"file\":\"" + std::string(UPLOAD_FOLDER) + file.filename + "\"}"};
        }
        return crow::response{400, "{\"status\":\"error\",\"message\":\"No file uploaded\"}"};
    });

    app.port(3000).multithreaded().run();
}</pre></code>
			</div>
		</div>
	</div>

    <script>
		document.addEventListener('DOMContentLoaded', function () {
			var modal = document.getElementById('myModal');
			var openModalBtn = document.getElementById('openModalBtn');
			var closeModalBtn = document.getElementById('closeModalBtn');

			openModalBtn.onclick = function () {
				modal.classList.remove('hidden');
			};

			closeModalBtn.onclick = function () {
				modal.classList.add('hidden');
			};

			window.onclick = function (event) {
				if (event.target === modal) {
					modal.classList.add('hidden');
				}
			};
		});

        document.getElementById('uploadForm').onsubmit = async (event) => {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            document.getElementById('result').innerText = 'Processing...';

            const response = await fetch('/api/generate/upload', {
                method: 'POST',
                body: formData
            });

            if (response.ok) {
                const data = await response.json();
                document.getElementById('result').innerText = data.text;
            } else {
                document.getElementById('result').innerText = 'Error processing image';
            }
        };
    </script>
</body>
</html>
